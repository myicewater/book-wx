<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.frame.dao.blocation.BLocationMapper" >
  <resultMap id="BaseResultMap" type="com.frame.model.blocation.BLocation" >
    <id column="location_id" property="locationId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="location_name" property="locationName" jdbcType="VARCHAR" />
    <result column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="speed" property="speed" jdbcType="DOUBLE" />
    <result column="accuracy" property="accuracy" jdbcType="DOUBLE" />
    <result column="is_used" property="isUsed" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    location_id, member_id, latitude, longitude, location_name, region_id, speed, accuracy, 
    is_used, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_location
    where location_id = #{locationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_location
    where location_id = #{locationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.frame.model.blocation.BLocation" >
    insert into b_location (location_id, member_id, latitude, 
      longitude, location_name, region_id, 
      speed, accuracy, is_used, 
      create_time)
    values (#{locationId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{latitude,jdbcType=DOUBLE}, 
      #{longitude,jdbcType=DOUBLE}, #{locationName,jdbcType=VARCHAR}, #{regionId,jdbcType=INTEGER}, 
      #{speed,jdbcType=DOUBLE}, #{accuracy,jdbcType=DOUBLE}, #{isUsed,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.frame.model.blocation.BLocation" >
    insert into b_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="locationId != null" >
        location_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="locationName != null" >
        location_name,
      </if>
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="accuracy != null" >
        accuracy,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="locationId != null" >
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="locationName != null" >
        #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=DOUBLE},
      </if>
      <if test="accuracy != null" >
        #{accuracy,jdbcType=DOUBLE},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.frame.model.blocation.BLocation" >
    update b_location
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="locationName != null" >
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=DOUBLE},
      </if>
      <if test="accuracy != null" >
        accuracy = #{accuracy,jdbcType=DOUBLE},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where location_id = #{locationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frame.model.blocation.BLocation" >
    update b_location
    set member_id = #{memberId,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      location_name = #{locationName,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=INTEGER},
      speed = #{speed,jdbcType=DOUBLE},
      accuracy = #{accuracy,jdbcType=DOUBLE},
      is_used = #{isUsed,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where location_id = #{locationId,jdbcType=INTEGER}
  </update>
</mapper>